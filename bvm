#!/bin/sh

set -e -u

BVM_PATH=$(dirname $(realpath $0))

# -----------------------------------------------------------------

check_bridge ()
{
    local _bridge="$1"

    ifconfig -l ether | rs 0 1 | grep "^${_bridge}\$" >/dev/null 2>&1
}

grub_for_centos_install ()
{
    cat << EOF
linux /isolinux/vmlinuz ks=${option_url}
initrd /isolinux/initrd.img
boot
EOF
}

grub_for_debian_install ()
{
    cat << EOF
linux /install.amd/vmlinuz install auto=true priority=critical url=${option_url}
initrd /install.amd/initrd.gz
boot
EOF
}

grub_load ()
{
    local _mapfile="$1"
    local _root="$2"
    local _directory="$3"

    local _options="-m ${_mapfile}"

    if [ ${_directory} != "none" ]; then
        _options="${_options} -d ${_directory}"
    fi

    if [ "${action}" != kickstart ]; then
        if [ ${option_console} != "stdio" ]; then
            _options="${_options} -c ${option_console}"
        fi
    fi

    /usr/local/sbin/grub-bhyve -r ${_root} -M ${vm_memory} ${_options} ${vm_name}
}

grub_create_map ()
{
    local _mapfile="$1"

    echo "(hd0) ${vm_disk}" > ${_mapfile}

    if [ -n "${option_iso}" ]; then
        echo "(cd0) ${option_iso}" > ${_mapfile}
    fi
}

bhyve_load_freebsd ()
{
    bhyveload -m ${vm_memory}M -d ${vm_disk} ${vm_name}
}

bhyve_load_centos ()
{
    mapfile=$(mktemp -t XXXXXX.map)

    grub_create_map ${mapfile}

    case ${action} in
        kickstart)
            grub_for_centos_install | grub_load ${mapfile} cd0 /nonexistent
            ;;
        install)
            grub_load ${mapfile} cd0 none
            ;;
        exec)
            grub_load ${mapfile} hd0,msdos1 /grub2
            ;;
        *)
    esac

    rm -f ${mapfile}
}

bhyve_load_debian ()
{
    mapfile=$(mktemp -t XXXXXX.map)

    grub_create_map ${mapfile}

    case ${action} in
        kickstart)
            grub_for_debian_install | grub_load ${mapfile} cd0 /nonexistent
            ;;
        install)
            grub_load ${mapfile} cd0 none
            ;;
        exec)
            grub_load ${mapfile} hd0,msdos1 /boot/grub
            ;;
        *)
    esac

    rm -f ${mapfile}
}

bhyve_load ()
{
    case ${vm_os} in
        freebsd*)
            bhyve_load_freebsd
            ;;
        centos*)
            bhyve_load_centos
            ;;
        debian*)
            bhyve_load_debian
            ;;
        *)
    esac
}

bhyve_exec ()
{
    local _mac=""

    if [ "${vm_mac}" != "none" ]; then
        _mac="${_mac},mac=${vm_mac}"
    fi

    local _devices=""

    _devices="${_devices} -s 0:0,hostbridge"
    _devices="${_devices} -s 1:0,lpc"
    _devices="${_devices} -s 2:0,virtio-net,${state_tap}${_mac}"
    _devices="${_devices} -s 3:0,virtio-blk,${vm_disk}"

    if [ -n "${option_iso}" ]; then
        _devices="${_devices} -s 31:0,ahci-cd,${option_iso}"
    fi

    local _exec=""

    if [ -n "${option_exec}" ]; then
        _exec="exec "
    fi

    ${_exec} bhyve -c ${vm_cores} -m ${vm_memory}M -H -P -A -l com1,${option_console} ${_devices} ${vm_name}
}

perform_kickstart ()
{
    [ -f ${option_iso} ] || return 1

    if [ ${option_console} = "stdio" ]; then
        [ -t 0 ] || return 1
    fi

    perform_exec
}

perform_install ()
{
    [ -f ${option_iso} ] || return 1

    if [ ${option_console} = "stdio" ]; then
        [ -t 0 ] || return 1
    fi

    perform_exec
}

perform_exec ()
{
    rm -f ${run_file}

    state_tap="$(ifconfig tap create)"

    if ! ifconfig ${vm_bridge} addm ${state_tap}; then
        ifconfig ${state_tap} destroy || true
        exit 1
    fi

    echo state_tap=${state_tap} >> ${run_file}

    trap perform_finish EXIT

    bhyve_load
    bhyve_exec
}

perform_finish ()
{
    . ${run_file}

    if [ -e /dev/vmm/${vm_name} ]; then
        bhyvectl --vm=${vm_name} --destroy
    fi

    if [ -n "${state_tap}" ]; then
        ifconfig "${vm_bridge}" deletem "${state_tap}"
        ifconfig "${state_tap}" destroy
    fi

    if [ -e ${run_file} ]; then
        rm -f ${run_file}
    fi
}

perform_svinstall ()
{
    local _service=/usr/local/etc/sv/${vm_name}

    mkdir -p ${_service}
    mkdir -p ${_service}/log

    install -m 600 ${option_file} ${_service}/bvm.conf

    cat << EOF > ${_service}/log/run
#!/bin/sh

mkdir -p main

exec chpst svlogd -tt ./main
EOF

    chmod 755 ${_service}/log/run

    cat << EOF > ${_service}/run
#!/bin/sh

${BVM_PATH}/bvm exec -f bvm.conf -s -x
EOF

    chmod 755 ${_service}/run

    cat << EOF > ${_service}/finish
#!/bin/sh

${BVM_PATH}/bvm finish -f bvm.conf
EOF

    chmod 755 ${_service}/finish
}

# -----------------------------------------------------------------

kldstat -n vmm >/dev/null 2>&1

case "$1" in
    kickstart)
        action="$1"
        ;;
    install)
        action="$1"
        ;;
    exec)
        action="$1"
        ;;
    finish)
        action="$1"
        ;;
    svinstall)
        action="$1"
        ;;
    *)
esac

shift

option_iso=""
option_console=stdio
option_exec=""

while getopts "f:i:u:sx" _option; do
    case ${_option} in
        f) option_file=$(realpath ${OPTARG})
           ;;
        i) option_iso=$(realpath ${OPTARG})
           ;;
        u) option_url=${OPTARG}
           ;;
        s) option_console=/dev/nmdm$$A
           ;;
        x) option_exec=YES
           ;;
        *)
    esac
done

shift $((${OPTIND} - 1))

. ${option_file}

: ${vm_name} ${vm_os} ${vm_cores} ${vm_memory} ${vm_bridge} ${vm_mac} ${vm_disk}

run_file=/var/run/bhyve-${vm_name}

# -----------------------------------------------------------------

if ! check_bridge ${vm_bridge}; then
    exit 1
fi

case ${vm_os} in
    freebsd)
    ;;
    centos)
    ;;
    debian)
    ;;
    *)
        exit 1
esac

if [ ! -e ${vm_disk} ]; then
    exit 1
fi

if [ -e /dev/vmm/${vm_name} ]; then
    bhyvectl --vm=${vm_name} --destroy
fi

# -----------------------------------------------------------------

perform_${action} "$@"
